{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u7b80\u4ecb","text":"<p>\u5728\u6b64\u8bb0\u5f55 uCore\u3001Rust \u548c rCore \u7684\u5b66\u4e60\u601d\u8003\u7684\u7b14\u8bb0\uff0c\u4ee5\u53ca\u6bd5\u8bbe\u521b\u65b0\u70b9\u7684\u8c03\u7814\u7b14\u8bb0\u3002</p> <p>\u70b9\u51fb\u5de6\u4fa7\u76ee\u5f55\u9605\u8bfb\u6587\u7ae0\u3002</p>"},{"location":"rcore/notes/","title":"rCore-learning","text":"<p>\u6b64\u5904\u8bb0\u8f7d rCore \u5b66\u4e60\u601d\u8003\u7684\u7b14\u8bb0\u3002</p> <p>\u5177\u4f53\u5b9e\u9a8c\u6e90\u7801\u4e0e\u5b9e\u9a8c\u62a5\u544a\u89c1 GitHub - Haohahahaha/rCore-learning\u3002</p>"},{"location":"rcore/notes/Rust_Learning/","title":"Rust Learning","text":"<p>author: Haohahahaha (Haorui Zhang)</p> <p>date: 2024-01-29~31</p> <p>email: 1259203802@qq.com</p> <p>\u5b66\u4e60\u7684\u4e66\u7c4d</p> <p>The Rust Programming Language</p> <p>\u4ec5\u4e3a\u4e2a\u4eba\u7b14\u8bb0</p> <p>\u4e2a\u4eba\u5b66\u4e60\u4ed3\u5e93 - rust-rustlings-Haohahahaha</p> <p>\u672c\u7b14\u8bb0\u5305\u542b <code>rustlings</code> \u7ec3\u4e60\u3002</p>"},{"location":"rcore/notes/Rust_Learning/#1-getting-started","title":"1. Getting Started","text":""},{"location":"rcore/notes/Rust_Learning/#13-hello-cargo","title":"1.3 Hello, Cargo","text":"<p>\u547d\u4ee4</p> <pre><code>cargo new   # \u65b0\u5efa\u9879\u76ee\ncargo build # \u6784\u5efa\u9879\u76ee\uff0c\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\u8981\u53bb target/build/ \u67e5\u770b\ncargo run   # \u8fd0\u884c\uff0c\u76f4\u63a5\u770b\u7ed3\u679c\ncargo check # \u68c0\u67e5\u7f16\u8bd1\u9519\u8bef\n</code></pre> <p>\u9879\u76ee\u7ed3\u6784</p> <pre><code>[4.0K]  .\n\u251c\u2500\u2500 [ 155]  Cargo.lock  # \u81ea\u52a8\u751f\u6210\uff0c\u638c\u63e1\u4f9d\u8d56\u5e93\u7248\u672c\u4fe1\u606f\uff08Chap.2 \u63d0\u5230\uff09\n\u251c\u2500\u2500 [ 180]  Cargo.toml  # \u5217\u51fa\u9879\u76ee\u4fe1\u606f\u3001\u4f9d\u8d56\u7b49\n\u251c\u2500\u2500 [4.0K]  .git\n\u251c\u2500\u2500 [   8]  .gitignore\n\u251c\u2500\u2500 [4.0K]  src # \u6e90\u4ee3\u7801\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 [  45]  main.rs\n\u2514\u2500\u2500 [4.0K]  target  # \u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6\n    \u251c\u2500\u2500 [ 177]  CACHEDIR.TAG\n    \u251c\u2500\u2500 [4.0K]  debug   # \u8c03\u8bd5\u751f\u6210\u7684\u6587\u4ef6\uff0c\u751f\u6210\u5feb\u4f46\u8fd0\u884c\u6162\n    \u251c\u2500\u2500 [4.0K]  release   # \u53d1\u5e03\u7684\u6587\u4ef6\uff0c\u751f\u6210\u6162\uff08\u7f16\u8bd1\u4f18\u5316\uff09\u4f46\u8fd0\u884c\u5feb\n    \u2514\u2500\u2500 [1.5K]  .rustc_info.json\n</code></pre>"},{"location":"rcore/notes/Rust_Learning/#2-programming-a-guessing-game","title":"2. Programming a Guessing Game","text":"<p>English Words</p> <pre><code>comes in handy  # \u6d3e\u4e0a\u7528\u573a\nscope           # \u4f5c\u7528\u57df\nparentheses     # \u5706\u62ec\u53f7\nimmutable       # \u4e0d\u53ef\u53d8\u7684\uff0c\u5176\u4e2d\u63d0\u53d6 mut \u4f5c\u4e3a\u53ef\u53d8\u53d8\u91cf\u5173\u952e\u5b57 \ninstance        # \u5b9e\u4f8b\uff08\u5efa\u7acb\u67d0\u79cd\u7c7b\u578b\u7684\u5b9e\u4f8b\uff09\nassociated      # \u5173\u8054\uff08 ~ func\uff0c\u5173\u8054\u51fd\u6570\u3002\u53ef\u7406\u89e3\u4e3a\u6210\u5458\u51fd\u6570\uff1f\uff09\nappend          # \u9644\u52a0\nhence           # \u56e0\u6b64\ntrivial         # \u7410\u788e\u7684\uff0c\u4e0d\u91cd\u8981\u7684\nscenario        # \u60c5\u666f\u3001\u573a\u666f   \nultimately      # \u6700\u7ec8\ninsatiable      # \u8d2a\u5f97\u65e0\u538c\u7684\n</code></pre> <p>\u8bed\u6cd5\u90e8\u5206\uff1a</p> <ul> <li> <p><code>fn</code>\uff1a\u58f0\u660e\u51fd\u6570\u4f53</p> </li> <li> <p><code>!</code>\uff1a\u5b8f</p> </li> <li> <p><code>let</code>\uff1a\u521b\u5efa\u53d8\u91cf</p> </li> <li> <p><code>mut</code>\uff1a\uff08\u53d8\u91cf\u7684\uff09\u53ef\u53d8\u5c5e\u6027</p> </li> <li> <p><code>//</code>\uff1a\u6ce8\u91ca</p> </li> <li> <p><code>::</code>\uff1a\u5173\u8054\u51fd\u6570/\u5b50\u51fd\u6570/\u5b50\u7c7b/\u7236\u5b50\u5173\u7cfb\u2026\u2026</p> </li> <li> <p><code>use [LIB]</code>\uff1a\u5f15\u7528\u540d\u4e3a <code>[LIB]</code> \u7684\u5e93\u51fd\u6570/\u5305</p> </li> <li> <p><code>io::stdin().readline()</code>\uff1a\u975e\u8986\u5199\u7684\u8f93\u5165\u51fd\u6570</p> </li> <li> <p><code>&amp;</code>\uff1a\u5f15\u7528\uff08Reference\uff09\uff0c\u53ef\u5927\u6982\u7406\u89e3\u4e3a\u201c\u6307\u9488\u201d\uff08\u800c\u975e\u5728\u5185\u5b58\u4e2d\u590d\u5236\u591a\u4efd\uff09\u3002</p> <p>\u9ed8\u8ba4\u4e0d\u53ef\u53d8\uff0c\u53ef\u53d8\u5199\u6cd5\uff1a</p> <p><pre><code>&amp;mut guess\n</code></pre> - \u4f7f\u7528\u6210\u5458\u51fd\u6570\u65f6\uff0c\u7528\u65b0\u7684\u4e00\u884c\u6216\u8005\u4e00\u4e9b\u7a7a\u683c\u4f1a\u4f7f\u8bed\u6cd5\u7ed3\u6784\u6e05\u6670\uff0c\u53ef\u8bfb\u6027\u5f3a\u3002</p> <p>\u5982\uff1a</p> <pre><code>// \u9519\u8bef\u793a\u8303\nio::stdin().read_line(&amp;mut guess).expect(\"Failed to read line\");\n\n// \u6b63\u786e\u793a\u8303\nio::stdin()\n    .read_line(&amp;mut guess)\n    .expect(\"Failed to read line\");\n</code></pre> <p>\u7ed3\u679c\u6709\u4e24\u79cd\u201c\u53d8\u4f53\u201d\u2014\u2014<code>variant</code>\uff0c\u5206\u522b\u662f <code>Ok</code> \u548c <code>Err</code>\u3002</p> <p>\u5bf9\u7ed3\u679c\u8fd4\u56de\u65f6\uff0c\u53ef\u7528 <code>expect()</code> \u51fd\u6570\u6765\u5224\u65ad\u8fd4\u56de\u7ed3\u679c\u662f\u5426\u5408\u6cd5\u3002\u5982\u679c\u4e0d\u5408\u6cd5\uff08<code>Err</code>\uff09\uff0c\u5219\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff08\u51fd\u6570\u5185\u7684\u5b57\u7b26\u4e32\uff09\uff1b\u5982\u679c\u5408\u6cd5\uff08<code>Ok</code>\uff09\uff0c\u5219\u8fd4\u56de\u503c\u3002</p> </li> <li> <p>\u6253\u5370\u53d8\u91cf\u503c\u65f6\uff0c\u53d8\u91cf\u653e\u5728\u82b1\u62ec\u53f7 <code>{}</code> \u5185\u3002</p> <p>\u5982\u679c\u6253\u5370\u7684\u662f\u8868\u8fbe\u5f0f\uff08\u7684\u6c42\u503c\u7ed3\u679c\uff09\uff0c\u5219\u82b1\u62ec\u53f7\u7a7a\uff0c\u7136\u540e\uff08\u50cfC\u4e00\u6837\uff09\u5728\u9017\u53f7\u540e\u9762\u6309\u987a\u5e8f\u5199\u53d8\u91cf\u540d\u3002</p> </li> <li> <p><code>match</code>\uff1a\u6839\u636e\u4e0d\u540c\u7ed3\u679c\u786e\u5b9a\u63a5\u4e0b\u6765\u8981\u505a\u4ec0\u4e48\uff0c\u53ef\u6839\u636e\u4e0d\u540c\u60c5\u51b5\u8fdb\u884c\u5904\u7406</p> <ul> <li><code>Err(_)</code>\uff1a\u8868\u793a\u5339\u914d\u6240\u6709\u9519\u8bef <p>The underscore, _, is a catchall value; in this example, we\u2019re saying we want to match all Err values, no matter what information they have inside them. </p> </li> </ul> </li> <li> <p><code>shadow</code>\u7279\u6027\uff1a\u5141\u8bb8\u540c\u540d\u4e0d\u540c\u7c7b\u578b\uff0c\u540e\u8005\u8986\u76d6\u524d\u8005</p> </li> <li> <p><code>:</code>\uff1a\u540e\u9762\u52a0\u5f3a\u5236\u8f6c\u6362\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u8f6c\u6362\u7528 <code>parse()</code> \u5b50\u51fd\u6570</p> </li> <li> <p>\u5faa\u73af\uff1a</p> <pre><code>loop{\n    // LOOP CODE\n}\n</code></pre> </li> </ul> <p>\u5b8c\u6210\uff01</p> <p>\u8f93\u51fa\u5982\u4e0b\uff1a</p> <pre><code># oslab @ oslab-virtual-machine in ~/Documents/Rust-Book-remaining/guessing_name on git:master x [21:56:44] \n$ cargo run\n   Compiling guessing_name v0.1.0 (/home/oslab/Documents/Rust-Book-remaining/guessing_name)\n    Finished dev [unoptimized + debuginfo] target(s) in 0.17s\n     Running `target/debug/guessing_name`\nGuess the number!\nPlease input your guess.\n89\nYou guessed: 89\nToo big!\nPlease input your guess.\n50\nYou guessed: 50\nToo small!\nPlease input your guess.\n66\nYou guessed: 66\nToo big!\nPlease input your guess.\n59\nYou guessed: 59\nToo small!\nPlease input your guess.\n63\nYou guessed: 63\nYou win!\n</code></pre>"},{"location":"rcore/notes/Rust_Learning/#3-common-programming-concepts","title":"3. Common Programming Concepts","text":""},{"location":"rcore/notes/Rust_Learning/#31-variables-and-mutability","title":"3.1 Variables and Mutability","text":"<ul> <li> <p><code>let</code> \u53ef\u201c\u906e\u76d6\u201d\u7c7b\u578b\uff0c\u4f46 <code>mut</code> \u53ea\u662f\u6539\u53d8\u503c\u3002</p> </li> <li> <p>\u5e38\u91cf <code>constant</code> \u5fc5\u987b\u58f0\u660e\u7c7b\u578b</p> </li> </ul>"},{"location":"rcore/notes/Rust_Learning/#32-data-types","title":"3.2 Data Types","text":"<p>Integer Literals in Rust</p> Number literals Example Decimal <code>98_222</code> Hex <code>0xff</code> Octal <code>0o77</code> Binary <code>0b1111_0000</code> Byte (<code>u8</code> only) <code>b'A'</code> <ul> <li> <p>Tuple</p> <ul> <li> <p>\u591a\u79cd\u7c7b\u578b\u7ec4\u5408\u800c\u6210</p> </li> <li> <p>\u53ef\u4ee5\u7528 <code>.[INDEX]</code> \u7684\u5f62\u5f0f\u6765\u8bbf\u95ee\u5143\u7ec4\u5185\u67d0\u4e2a\u5e8f\u53f7 <code>[INDEX]</code> \u7684\u5143\u7d20\uff08\u4ee50\u5f00\u59cb\uff09</p> </li> <li> <p>\u53ef\u4ee5\u89e3\u6784\uff0c\u5206\u522b\u8d4b\u503c\u7ed9\u5404\u4e2a\u65b0\u5efa\u53d8\u91cf</p> </li> </ul> </li> <li> <p>Array</p> <ul> <li> <p>\u521d\u59cb\u5316\u503c\uff1a<code>let a: [\u521d\u59cb\u503c; \u5143\u7d20\u4e2a\u6570];</code></p> </li> <li> <p>\u89c4\u5b9a\u53d8\u91cf\u7c7b\u578b\uff1a<code>let a: [\u5143\u7d20\u7c7b\u578b; \u5143\u7d20\u4e2a\u6570] = [1, 2, ...];</code></p> </li> </ul> </li> </ul>"},{"location":"rcore/notes/Rust_Learning/#33-functions","title":"3.3 Functions","text":"<p>English Words</p> <pre><code>prevalent  # \u76db\u884c\u3001\u666e\u904d\u7684\n</code></pre> <ul> <li> <p>\u51fd\u6570\u547d\u540d\u89c4\u5219\uff1a<code>snake case</code>\u2014\u2014\u5168\u5c0f\u5199\uff0c\u5355\u8bcd\u4e4b\u95f4\u7528\u4e0b\u5212\u7ebf\u5206\u5272</p> </li> <li> <p>\u53ea\u8981\u5728\u8c03\u7528\u8005\u53ef\u89c1\u7684\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u51fd\u6570\u5373\u53ef\uff0c\u65e0\u5148\u540e\u987a\u5e8f</p> </li> <li> <p>\u51fd\u6570\u7684\u53c2\u6570\u5fc5\u987b\u6807\u660e\u53d8\u91cf\u7c7b\u578b\uff0c\u7528 <code>,</code> \u9694\u5f00</p> </li> <li> <p>\u58f0\u660e\uff08Statement\uff09\u4e0d\u80fd\u8fde\u7eed\u7b49\u53f7\uff0c\u56e0\u4e3a\u58f0\u660e\u4e0d\u8fd4\u56de\u503c\u3002\u4f46\u53ef\u4ee5\u58f0\u660e\u53d8\u91cf\u540e\u63a5\u5927\u62ec\u53f7\uff0c\u91cc\u9762\u63a5\u8868\u8fbe\u5f0f\uff08Expression\uff09\uff0c\u56e0\u4e3a\u8868\u8fbe\u5f0f\u8fd4\u56de\u503c\u3002</p> <ul> <li>\u5355\u72ec\u7684\u6570\u5b57\u4e5f\u662f\u8868\u8fbe\u5f0f</li> </ul> </li> <li> <p>\u51fd\u6570\u53ef\u5728\u51fd\u6570\u540d\u79f0\u540e\u9762\u63a5\uff1a<code>-&gt; [RETURN_VALUE_TYPE]</code>\uff0c\u8fd9\u6837\u53ef\u4ee5\u89c4\u5b9a\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u3002</p> </li> </ul>"},{"location":"rcore/notes/Rust_Learning/#35-control-flow","title":"3.5 Control Flow","text":"<ul> <li> <p>\u8d4b\u503c\u7ed9\u53d8\u91cf\u7684\u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u4f46\u662f\u4ee3\u7801\u5757\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u5fc5\u987b\u4e0e\u53d8\u91cf\u7c7b\u578b\u76f8\u540c\u3002</p> </li> <li> <p><code>Loop</code></p> <ul> <li> <p><code>break</code> \u540e\u9762\u53ef\u4ee5\u63a5\u8fd4\u56de\u503c;</p> </li> <li> <p>\u5faa\u73af\u4e4b\u524d\u53ef\u4ee5\u52a0\u6807\u7b7e\uff0c\u4ee5\u4fbf <code>break</code> \u8bc6\u522b\uff1b</p> </li> </ul> </li> <li> <p><code>while</code></p> <ul> <li>\u5faa\u73af\u6761\u4ef6\u4e0d\u7528\u52a0\u62ec\u53f7\uff08\u54e6\u5bf9 <code>if</code> \u4e5f\u662f\uff09</li> </ul> </li> <li> <p><code>for</code></p> <ul> <li> <p>\u904d\u5386\u6570\u7ec4\u65f6\u4e0d\u7528\u5199\u8fb9\u754c\u6761\u4ef6\uff0c\u53ea\u9700\u8981\u5199 <code>for element in a</code> \u5373\u53ef\u3002\u8fd9\u662f\u56e0\u4e3a <code>for</code> \u4f7f\u7528\u4e86\u6807\u51c6\u5e93\u63d0\u4f9b\u7684Range\uff0c\u5b83\u751f\u6210\u4ece\u4e00\u4e2a\u6570\u5b57\u5f00\u59cb\u5230\u53e6\u4e00\u4e2a\u6570\u5b57\u4e4b\u524d\u7684\u6240\u6709\u6570\u5b57\u5e8f\u5217\u3002</p> </li> <li> <p>\u8fd8\u53ef\u4ee5\u7528 <code>.rev()</code> \u548c\u6570\u5b57\u5e8f\u5217 <code>(x...n)</code> \u5b9e\u73b0\u5012\u8ba1\u65f6\uff1a</p> </li> </ul> <pre><code>for number in (1...4).rev() {\n    println!(\"{number}!\");\n}\n</code></pre> </li> </ul>"},{"location":"rcore/notes/Rust_Learning/#4-understanding-ownership","title":"4. Understanding Ownership","text":""},{"location":"rcore/notes/Rust_Learning/#41-what-is-ownership","title":"4.1 What is Ownership?","text":"<ul> <li> <p>\u5bf9\u4e8e\u5b58\u50a8\u5728\u5806\u4e0a\u7684\u53d8\u91cf</p> <ul> <li> <p>\u9ed8\u8ba4\u4e0d\u53ef\u590d\u5236\uff0c\u53ea\u80fd\u79fb\u52a8\u3002\u7c7b\u4f3c\u6d45\u590d\u5236\uff0c\u53ea\u590d\u5236\u6307\u9488\u3002</p> </li> <li> <p>\u9700\u8981\u201c\u6df1\u590d\u5236\u201d\u65f6\uff0c\u8bf7\u4f7f\u7528 <code>clone()</code> \u51fd\u6570\u3002</p> </li> </ul> </li> <li> <p>\u5bf9\u4e8e\u5b58\u50a8\u5728\u6808\u4e0a\u7684\u53d8\u91cf</p> <ul> <li>\u76f4\u63a5\u590d\u5236</li> </ul> </li> <li> <p><code>Copy</code> \u4e0e <code>Drop</code> \u7279\u6027</p> <ul> <li> <p><code>Copy</code> \u662f\u9488\u5bf9\u6808\u4e0a\u7684\u53d8\u91cf\u7684\uff0c\u7b80\u5355\u7684\u590d\u5236\uff1b</p> </li> <li> <p><code>Drop</code> \u662f\u9488\u5bf9\u5806\u4e0a\u53d8\u91cf\u7684\uff0c\u5728\u4f5c\u7528\u57df\u540e\u56de\u6536\u53d8\u91cf\u3002</p> </li> </ul> <p>\u901a\u5e38\u4e00\u7ec4\u7b80\u5355\u7684\u6807\u91cf\u503c\u90fd\u53ef\u4ee5\u5b9e\u73b0 <code>Copy</code> \uff0c\u4f46\u9700\u8981\u5206\u914d\u6216\u662f\u67d0\u79cd\u5f62\u5f0f\u7684\u8d44\u6e90\u7684\u7c7b\u578b\u90fd\u4e0d\u80fd\u5b9e\u73b0 <code>Copy</code>\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5b9e\u73b0 <code>Copy</code> \u7279\u6027\u7684\u7c7b\u578b\uff1a - \u6240\u6709\u7684\u6574\u6570\u7c7b\u578b\uff0c\u5982 u32\u3002 - \u5e03\u5c14\u7c7b\u578b\uff0cbool\uff0c\u5177\u6709\u503c true \u548c false\u3002 - \u6240\u6709\u7684\u6d6e\u70b9\u7c7b\u578b\uff0c\u5982 f64\u3002 - \u5b57\u7b26\u7c7b\u578b\uff0cchar\u3002 - \u5143\u7ec4\uff0c\u5982\u679c\u5b83\u4eec\u53ea\u5305\u542b\u4e5f\u5b9e\u73b0\u4e86 Copy \u7684\u7c7b\u578b\u3002\u4f8b\u5982\uff0c(i32, i32) \u5b9e\u73b0\u4e86 Copy\uff0c\u4f46 (i32, String) \u4e0d\u4f1a\u3002</p> </li> <li> <p>\u51fd\u6570\u4e5f\u662f\u4e00\u4e2a\u4f5c\u7528\u57df\uff0c\u5806\u4e0a\u5206\u914d\u7684\u53d8\u91cf\u8fdb\u5165\u51fd\u6570\u5c31\u4f1a\u88ab\u79fb\u52a8\uff0c\u4e4b\u540e\u518d\u9000\u51fa\u5c31\u8c03\u7528\u4e86 <code>Drop</code> \uff0c\u5931\u6548\u4e86\uff1b</p> </li> <li> <p>\u4f46\u662f\u6808\u4e0a\u5206\u914d\u7684\u53d8\u91cf\u662f\u901a\u8fc7 <code>Copy</code> \u8fdb\u5165\u51fd\u6570\uff0c\u9000\u51fa\u540e\u53ef\u7ee7\u7eed\u4f7f\u7528\u3002</p> </li> <li> <p>\u51fd\u6570\u8fd4\u56de\u503c\u53ea\u9700\u8981\u8f93\u5165\u503c\u5373\u53ef\uff0c\u65e0\u9700\u5206\u53f7\u3002</p> </li> <li> <p>\u5141\u8bb8\u51fd\u6570\u5c06\u53c2\u6570\u4f20\u56de\u53bb</p> </li> </ul>"},{"location":"rcore/notes/Rust_Learning/#42-references-and-borrowing","title":"4.2 References and Borrowing","text":"<ul> <li> <p>\u4ee3\u66ff\u201c\u8fd4\u56de\u7ed9\u8c03\u7528\u51fd\u6570\u201d\u7684\u505a\u6cd5\u662f\uff1a\u5f15\u7528\uff08Reference\uff09\u3002\u7528\u7b26\u53f7 <code>&amp;</code> \u8868\u793a\uff08\u5176\u5730\u5740\uff09\u3002</p> </li> <li> <p>\u89e3\u5f15\u7528\u8fd0\u7b97\u7b26\u662f <code>*</code> \uff0c\u548c C \u4e00\u6837\u54af\u3002</p> </li> <li> <p>\u501f\u7528\uff1a\u521b\u5efa\u4e00\u4e2a\u5f15\u7528\u3002\u4e0d\u5141\u8bb8\u4fee\u6539\u5f15\u7528\u7684\u5185\u5bb9\u3002</p> </li> <li> <p>\u53ef\u53d8\u5f15\u7528\uff1a <code>&amp;mut VAR</code>\uff08\u540c\u65f6\u53d8\u91cf\u4e5f\u5fc5\u987b\u662f <code>mut</code> \u7684\uff09</p> <ul> <li> <p>\u4e0d\u80fd\u540c\u65f6\u5bf9\u67d0\u4e2a\u53d8\u91cf\u8fdb\u884c\u591a\u6b21\u53ef\u53d8\u501f\u7528\u3002</p> </li> <li> <p>\u4f46\u53ef\u4ee5\u4f7f\u7528\u82b1\u62ec\u53f7\u6765\u521b\u5efa\u65b0\u7684\u4f5c\u7528\u4e8e\uff0c\u5141\u8bb8\u591a\u4e2a\u53ef\u53d8\u5f15\u7528\uff0c\u53ea\u662f\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\u3002</p> </li> <li> <p>\u5bf9\u67d0\u4e00\u4e2a\u53d8\u91cf\u6765\u8bf4\uff0c\u4e0d\u53ef\u53d8\u5f15\u7528\u540e\u9762\u4e0d\u80fd\u518d\u7528\u53ef\u53d8\u5f15\u7528\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u4e0d\u53ef\u53d8\u5f15\u7528\u662f <code>\u4e0d\u53d8\u7684</code> \u3002</p> </li> </ul> </li> <li> <p>\u60ac\u7a7a\u6307\u9488</p> <ul> <li>\u5728\u51fd\u6570\u91cc\u521b\u5efa\u7684 <code>String</code> \uff0c\u8fd4\u56de\u65f6\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\uff0c\u56e0\u4e3a\u521b\u5efa\u7684\u53d8\u91cf\u88ab\u91ca\u653e\u3002\u8fd9\u65f6\u76f4\u63a5\u8fd4\u56de <code>String</code> \u7c7b\u578b\u5373\u53ef\u3002</li> </ul> </li> </ul>"},{"location":"rcore/notes/Rust_Learning/#43-the-slice-type","title":"4.3 The Slice Type","text":"<ul> <li> <p>\u5207\u7247\uff1a\u5b58\u50a8\u5bf9\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528+\u4e00\u4e2a\u957f\u5ea6</p> </li> <li> <p>\u5728\u540e\u9762\u7d22\u5f15\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u8bed\u6cd5\uff1a<code>[x..n]</code>\uff0c\u5982\u679c <code>x = 0</code> \u6216 <code>n = len</code> \uff0c\u5219\u53ef\u4ee5\u7701\u7565\u3002</p> </li> <li> <p>\u5904\u7406\u7684\u53ea\u662fUTF-8\uff0c\u591a\u5b57\u8282\u7684\u5b57\u7b26\u4e0d\u652f\u6301\u3002</p> </li> <li> <p><code>&amp;String</code> \u662f\u5b57\u7b26\u4e32\uff0c<code>&amp;str</code> \u662f\u5b57\u7b26\u4e32\u5207\u7247\u3002\u6240\u4ee5\u53c2\u6570\u4e00\u822c\u5199 <code>&amp;str</code> \u5373\u53ef\u517c\u5bb9\u5b57\u7b26\u4e32\u7684\u4f20\u9012\uff08\u6bd5\u7adf\u5168\u90e8\u7684\u5207\u7247\u4e5f\u662f\u5207\u7247\uff0c\u54c8\u54c8\uff09</p> <pre><code>let word_string = String::from(\"Hello, World\"); // \u521b\u5efa String \u7c7b\u578b\u53d8\u91cf\u7684\u65b9\u6cd5\nlet word = \"hello, world\"; // word \u7684\u7c7b\u578b\u662f &amp;str \uff0c\u5373\u5207\u7247\nlet fw = first_word(word); // \u53ef\u4ee5\u4e0d\u7528 &amp; \u7b26\u53f7\u76f4\u63a5\u4f20\u5165\uff0c\u4e5f\u53ef\u4ee5\u7528\uff1bString \u5219\u5fc5\u987b\u8981\u7528\u3002\n</code></pre> </li> <li> <p>\u5176\u4ed6\u7c7b\u578b\u4e5f\u53ef\u4ee5\u7528\u5207\u7247\uff0c\u5de5\u4f5c\u65b9\u5f0f\u4e0e\u5b57\u7b26\u4e32\u5207\u7247\u76f8\u540c\uff0c\u5728\u5411\u91cf\u91cc\u8ba8\u8bba\u3002</p> </li> </ul>"},{"location":"rcore/notes/Rust_Learning/#5-using-structs-to-structure-related-data","title":"5. Using Structs to Structure Related Data","text":""},{"location":"rcore/notes/Rust_Learning/#51-defining-and-instantiating-structs","title":"5.1 Defining and Instantiating Structs","text":"<ul> <li> <p>\u7ed3\u6784\u4f53\u4e0e\u5143\u7ec4\u7684\u4e0d\u540c\uff1a</p> <ol> <li> <p>\u5143\u7ec4\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\uff0c\u7ed3\u6784\u4f53\u5185\u90e8\u53ef\u4e0d\u540c</p> </li> <li> <p>\u5143\u7ec4\u53ea\u80fd\u987a\u5e8f\u6307\u5b9a\u548c\u8bbf\u95ee\uff0c\u7ed3\u6784\u4f53\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u6570\u636e\u7247\u6bb5\u547d\u540d\uff0c\u66f4\u52a0\u7075\u6d3b\uff1b</p> </li> </ol> </li> <li> <p>\u521d\u59cb\u5316\u65f6\u65e0\u9700\u4e25\u683c\u6309\u7167\u987a\u5e8f\u3002\u8bed\u6cd5\u7ed3\u6784\uff1a</p> <pre><code>let mut user1 = User {\n    active: true,   // \u7528 : \u6765\u8d4b\u503c\n    username: String::from(\"someusername123\"),  // \u7528 , \u6765\u7ed3\u675f\u4e00\u884c\n    email: String::from(\"someone@example.com\"), // \u4e0d\u7528 &amp;str \u662f\u4e3a\u4e86\u8ba9\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u62e5\u6709\u5176\u6240\u6709\u6570\u636e\uff0c\u4e14\u5728\u6574\u4e2a\u7ed3\u6784\u4f53\u6709\u6548\u7684\u65f6\u95f4\u5185\u90fd\u6709\u6548\n    sign_in_count = 1, // \u6700\u540e\u4e00\u884c\u522b\u5fd8\u4e86\n};\n</code></pre> </li> <li> <p>\u83b7\u53d6\u7ed3\u6784\u4f53\u4e2d\u7684\u503c\uff0c\u7528 <code>.</code> \u5373\u53ef\uff08\u548c C \u4e00\u6837\uff09\u3002\u82e5\u5b9e\u4f8b\u53ef\u53d8\uff0c\u53ef\u4fee\u6539\u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u3002\u4f46\u5fc5\u987b\u662f\u6574\u4e2a\u5b9e\u4f8b\u53ef\u53d8\uff0c\u5176\u4e2d\u7684\u67d0\u4e00\u4e2a\u5b57\u6bb5\u4e0d\u80fd\u5355\u72ec\u53ef\u53d8\u3002</p> </li> <li> <p>\u6784\u5efa\u7ed3\u6784\u4f53\u5b9e\u4f8b\u51fd\u6570\u4e2d\uff0c\u53c2\u6570\u53ef\u4e0e\u7ed3\u6784\u4f53\u5b57\u6bb5\u540d\u76f8\u540c\uff0c\u8fd9\u6837\u65b9\u4fbf\u7701\u7565\u8d4b\u503c\u8bed\u53e5\uff1a</p> <pre><code>fn build_user(email: String, username: String) -&gt; User {\n    User {\n        active: true,\n        username,\n        email,\n        sign_in_count: 1,\n    }\n}   \n</code></pre> </li> <li> <p>\u4ece\u5df2\u6709\u7684\u5b9e\u4f8b\u521b\u5efa\u65b0\u5b9e\u4f8b\u65f6\uff0c\u53ea\u9700\u5bf9\u9700\u8981\u4fee\u6539\u7684\u5b57\u6bb5\u8fdb\u884c\u4fee\u6539\uff0c\u5176\u4f59\u5b57\u6bb5\u5199<code>..user1</code>\uff08\u4f8b\u5b50\uff09 \uff0c\u800c\u4e14\u5fc5\u987b\u653e\u5728\u6700\u540e\u3002</p> <ul> <li>\u4e0d\u8fc7\u88ab\u4f7f\u7528\u7684\u5b9e\u4f8b\u91cc\u9762\u7684\u5b57\u6bb5\uff0c\u88ab\u79fb\u52a8\u4e86\uff0c\u5982\u679c\u91cd\u65b0\u8d4b\u503c\u5c31\u4e0d\u4f1a\u79fb\u52a8\uff08\u8fd9\u91cc\u5b58\u7591\uff09</li> </ul> </li> <li> <p>Unit-Like Struct\uff1a</p> <ul> <li>\u53ef\u4ee5\u8d77\u4e00\u4e2a\u4e0d\u542b\u4efb\u4f55\u7ed3\u6784\u7684\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u521b\u5efa\u5b9e\u4f8b\u3002\u6bd4\u5982\u9700\u8981\u6d4b\u8bd5\u65f6\uff0c\u5c31\u53ef\u4ee5\u8bbe\u7f6e\u5b9e\u4f8b\u4e3a\u67d0\u79cd\u7c7b\u578b\u4e86\u3002</li> </ul> </li> <li> <p>\u7ed3\u6784\u4f53\u53ef\u4ee5\u5b58\u50a8\u5f15\u7528\uff0c\u4f46\u9700\u8981\u4f7f\u7528\u751f\u547d\u5468\u671f\uff08LifeTimes\uff09</p> </li> </ul>"},{"location":"rcore/notes/Rust_Learning/#52-an-example-program-using-structs","title":"5.2 An Example Program Using Structs","text":"<ul> <li> <p><code>debug</code> \u6a21\u5f0f\u6253\u5370\u7ed3\u6784\u4f53:</p> <pre><code>#[derive(Debug)]    // debug\u6807\u7b7e\uff0c\u653e\u5728\u7a0b\u5e8f\u6700\u524d\u9762\nlet rect1 = ... // \u7701\u7565\nprintfln!(\"{:?}\", rect1);   // \u6ce8\u610f\u6253\u5370\u65f6\u7684\u56fa\u5b9a\u683c\u5f0f\uff1a {:?}\n</code></pre> </li> </ul>"},{"location":"ucore/notes/lab-template/","title":"Lab :","text":"<p>author: Haohahahaha (Haorui Zhang)</p> <p>email: 1259203802@qq.com</p> <p>date: 2024-</p> <p>\u672c\u6587\u4e3a\u9605\u8bfb\u7b14\u8bb0\uff0c\u975e\u5b9e\u9a8c\u7b14\u8bb0</p>"},{"location":"ucore/notes/lab3/","title":"Lab 3: \u865a\u62df\u5185\u5b58\u7ba1\u7406","text":"<p>author: Haohahahaha (Haorui Zhang)</p> <p>email: 1259203802@qq.com</p> <p>date: 2024-01-21</p> <p>\u672c\u6587\u4e3a\u9605\u8bfb\u7b14\u8bb0\uff0c\u975e\u5b9e\u9a8c\u7b14\u8bb0</p>"}]}